.playground {
  display: flex;
  height: 100%;
}

.playgroundCode {
  flex: 1 1 60rem;
  height: 100%;
}

.playgroundPreview {
  flex: 1 1 80rem;
  padding: 2rem;
  overflow: auto;
}

.playgroundStage {
  font-size: 2rem;
  height: 100%;
}

.CodeMirror {
  height: 100%; 
  background-color: #000639;
  color: #fff;
  font-family: "SF Mono", "Monaco", "Inconsolata", "Fira Mono", "Droid Sans Mono", "Source Code Pro", monospace;
}

/* GUTTER */
.CodeMirror-gutters {
  border-right: 1px solid #dddddd;
  background-color: #230051;
  white-space: nowrap;
}

.CodeMirror-linenumber {
  min-width: 20px;
  padding: 0 3px 0 5px;
  text-align: right;
  color: #999999;
  white-space: nowrap;
}

.CodeMirror-guttermarker {
  color: black;
}

.CodeMirror-guttermarker-subtle {
  color: #999999;
}

/* CURSOR */
.CodeMirror-cursor {
  width: 0;
  border-right: none;
  border-left: 1px solid #DFE4E8;
}

/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 1px solid silver;
}

.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0 !important;
  background: #77ee77;
}

.cm-fat-cursor div.CodeMirror-cursors {
  z-index: 1;
}

.cm-animate-fat-cursor {
  width: auto;
  border: 0;
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: #77ee77;
}

@-moz-keyframes blink {
  50% {
    background-color: transparent;
  }
}
@-webkit-keyframes blink {
  50% {
    background-color: transparent;
  }
}
@keyframes blink {
  50% {
    background-color: transparent;
  }
}
/* Can style cursor different in overwrite (non-insert) mode */
.cm-tab {
  display: inline-block;
  text-decoration: inherit;
}

.CodeMirror-rulers {
  position: absolute;
  top: -50px;
  right: 0;
  bottom: -20px;
  left: 0;
  overflow: hidden;
}

.CodeMirror-ruler {
  position: absolute;
  top: 0;
  bottom: 0;
  border-left: 1px solid #cccccc;
}

/* DEFAULT THEME */
.cm-s-default .cm-header {
  color: blue;
}

.cm-s-default .cm-quote {
  color: #009900;
}

.cm-negative {
  color: #dd4444;
}

.cm-positive {
  color: #229922;
}

.cm-header,
.cm-strong {
  font-weight: bold;
}

.cm-em {
  font-style: italic;
}

.cm-link {
  text-decoration: underline;
}

.cm-strikethrough {
  text-decoration: line-through;
}

.cm-s-default .cm-keyword {
  color: #fdac9a;
}

.cm-s-default .cm-property {
  color: #fff;
}

.cm-s-default .cm-atom {
  color: #edc200;
}

.cm-s-default .cm-number {
  color: #edc200;
}

.cm-s-default .cm-def {
  color: #edc200;
}

.cm-s-default .cm-variable-2 {
  color: #0055aa;
}

.cm-s-default .cm-variable-3 {
  color: #008855;
}

.cm-s-default .cm-comment {
  color: #aa5500;
}

.cm-s-default .cm-string {
  color: #edc200;
}

.cm-s-default .cm-string-2 {
  color: #ff5500;
}

.cm-s-default .cm-meta {
  color: #555555;
}

.cm-s-default .cm-qualifier {
  color: #555555;
}

.cm-s-default .cm-builtin {
  color: #3300aa;
}

.cm-s-default .cm-bracket {
  color: #999977;
}

.cm-s-default .cm-tag {
  color: #32cac7;
}

.cm-s-default .cm-attribute {
  color: #fdac9a;
}

.cm-s-default .cm-hr {
  color: #999999;
}

.cm-s-default .cm-link {
  color: #fdac9a;
}

.cm-s-default .cm-error {
  color: #ff0000;
}

.cm-invalidchar {
  color: #ff0000;
}

.CodeMirror-composing {
  border-bottom: 2px solid;
}

/* Default styles for common addons */
div.CodeMirror span.CodeMirror-matchingbracket {
  color: #00ff00;
}

div.CodeMirror span.CodeMirror-nonmatchingbracket {
  color: #ff2222;
}

.CodeMirror-matchingtag {
  background: rgba(255, 150, 0, 0.3);
}

.CodeMirror-activeline-background {
  background: #e8f2ff;
}

/* STOP */
/* The rest of this file contains styles related to the mechanics of
  the editor. You probably shouldnâ€™t touch them. */
.CodeMirror {
  position: relative;
  overflow: hidden;
  padding: 2rem;
}

.CodeMirror-scroll {
  position: relative;
  overflow: -moz-scrollbars-none;
  overflow-y: auto;
  overflow-x: hidden;
  height: 100%;
  margin-right: -30px;
  margin-bottom: -30px;
  outline: none;
  /* Prevent dragging from highlighting the element */
  -ms-overflow-style: none;
}

.CodeMirror-scroll::-webkit-scrollbar {
  display: none;
}

.CodeMirror-sizer {
  position: relative;
  border-right: 30px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
  before actual scrolling happens, thus preventing shaking and
  flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
}

.CodeMirror-vscrollbar {
  top: 0;
  right: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}

.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}

.CodeMirror-scrollbar-filler {
  right: 0;
  bottom: 0;
}

.CodeMirror-gutter-filler {
  bottom: 0;
  left: 0;
}

.CodeMirror-gutters {
  position: absolute;
  z-index: 3;
  top: 0;
  left: 0;
  min-height: 100%;
}

.CodeMirror-gutter {
  display: inline-block;
  vertical-align: top;
  height: 100%;
  margin-bottom: -30px;
  white-space: normal;
}

.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  border: none !important;
  background: none !important;
}

.CodeMirror-gutter-background {
  position: absolute;
  z-index: 4;
  top: 0;
  bottom: 0;
}

.CodeMirror-gutter-elt {
  position: absolute;
  z-index: 4;
  cursor: default;
}

.CodeMirror-gutter-wrapper ::selection {
  background-color: transparent;
}

.CodeMirror-gutter-wrapper ::-moz-selection {
  background-color: transparent;
}

.CodeMirror-lines {
  min-height: 1px;
  /* prevents collapsing before first draw */
  cursor: text;
}

.CodeMirror pre {
  position: relative;
  z-index: 2;
  overflow: hidden;
  margin: 0;
  border-width: 0;
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  border-radius: 0;
  background: transparent;
  font-family: inherit;
  font-size: 1.6rem;
  white-space: pre;
  word-wrap: normal;
  line-height: 2.2rem;
  color: inherit;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-variant-ligatures: contextual;
  font-variant-ligatures: contextual;
}

.CodeMirror-wrap pre {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal;
}

.CodeMirror-linebackground {
  position: absolute;
  z-index: 0;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  overflow: auto;
}

.CodeMirror-rtl pre {
  direction: rtl;
}

.CodeMirror-code {
  outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.CodeMirror-measure {
  position: absolute;
  overflow: hidden;
  width: 100%;
  height: 0;
  visibility: hidden;
}

.CodeMirror-cursor {
  position: absolute;
  pointer-events: none;
}

.CodeMirror-measure pre {
  position: static;
}

div.CodeMirror-cursors {
  position: relative;
  z-index: 3;
  visibility: hidden;
}

div.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-selected {
  background: #d9d9d9;
}

.CodeMirror-focused .CodeMirror-selected {
  background: #d7d4f0;
}

.CodeMirror-crosshair {
  cursor: crosshair;
}

.CodeMirror-line::selection,
.CodeMirror-line > span::selection,
.CodeMirror-line > span > span::selection {
  background: #d7d4f0;
}

.CodeMirror-line::-moz-selection,
.CodeMirror-line > span::-moz-selection,
.CodeMirror-line > span > span::-moz-selection {
  background: #d7d4f0;
}

.cm-searching {
  background: #ffffaa;
  background: rgba(255, 255, 0, 0.4);
}

/* Used to force a border model for a node */
.cm-force-border {
  padding-right: 0.1px;
}

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}
/* See issue #2901 */
.cm-tab-wrap-hack:after {
  content: '';
}

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
  background: none;
}
